{"version":3,"sources":["Input.tsx","NeedlemanWunsch.tsx","App.tsx","Footer.tsx","serviceWorker.ts","index.tsx"],"names":["Input","id","className","onFocus","e","target","placeholder","type","defaultValue","defaultScores","onChange","this","_handleScoreChange","bind","onClick","_handleSubmit","_hanldeClear","event","document","getElementById","value","i","scoreNumber","toString","props","onSubmitHandler","checkSequence","lhs","trim","rhs","scores","input","score","Number","isNaN","push","Component","NeedlemanWunsch","mtrx","path","lhsSpaces","rhsSpaces","lhsResult","rhsResult","pathRecord","state","match","mismatch","midopen","extension","endopen","_matrixesInit","_matrInit","_pathInit","Array","length","_dp","_traceBack","_insertSpaces","x","y","z","minusInfinity","matrixes","j","indexOfMax","arr","open","_indexOfMax","_score","fill","lhsIndex","rhsIndex","currPath","charAt","src","spaces","result","_align","pathRecordIndex","determine","k","matrixFirstRow","map","raw","elem","onMouseEnter","_handleMatrixElementMouseEnter","onMouseLeave","_handleMatrixElementMouseLeave","field","_handleInnerMatrixElementMouseEnter","_handleInnerMatrixElementMouseLeave","NEGATIVE_INFINITY","matrixHTML","_setHighlighted","_getRowHeadElementById","_getColumnHeadElementById","_unsetHighlighted","setTip","tipContent","tip","firstChild","innerHTML","clientX","body","clientWidth","_getInnerMatrixOrigin","_getMatchInfo","_getInnerMatrixElementById","element","classList","add","remove","App","_submit","setState","Footer","href","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5f7dcee3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './Input.css';\r\n\r\nclass Input extends Component<IInputProps> {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"inputMain\">\r\n                <div id=\"inputArea\">\r\n                    <div className=\"inputTable\" id=\"sequence\">\r\n                        <div className=\"tableRow\">\r\n                            <p>lhs: </p>\r\n                            <p><textarea id=\"lhs\" onFocus={(e) => {e.target.placeholder=\"\"}}></textarea></p>\r\n                        </div>\r\n                        <div className=\"tableRow\">\r\n                            <p>rhs: </p>\r\n                            <p><textarea id=\"rhs\" onFocus={(e) => {e.target.placeholder=\"\"}}></textarea></p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"inputTable\" id=\"score\">\r\n                        <div className=\"tableRow\">\r\n                            <p>match: </p>\r\n                            <p><input type=\"number\" defaultValue={Input.defaultScores[0]} id=\"score0\" onChange={this._handleScoreChange.bind(this)}></input></p>\r\n                        </div>\r\n                        <div className=\"tableRow\">\r\n                            <p>mismatch: </p>\r\n                            <p><input type=\"number\" defaultValue={Input.defaultScores[1]} id=\"score1\" onChange={this._handleScoreChange.bind(this)}></input></p>\r\n                        </div>\r\n                        <div className=\"tableRow\">\r\n                            <p>mid-open: </p>\r\n                            <p><input type=\"number\" defaultValue={Input.defaultScores[2]} id=\"score2\" onChange={this._handleScoreChange.bind(this)}></input></p>\r\n                        </div>\r\n                        <div className=\"tableRow\">\r\n                            <p>extension: </p>\r\n                            <p><input type=\"number\" defaultValue={Input.defaultScores[3]} id=\"score3\" onChange={this._handleScoreChange.bind(this)}></input></p>\r\n                        </div>\r\n                        <div className=\"tableRow\">\r\n                            <p>end-open: </p>\r\n                            <p><input type=\"number\" defaultValue={Input.defaultScores[4]} id=\"score4\" onChange={this._handleScoreChange.bind(this)}></input></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"inputButton\">\r\n                    <p>\r\n                        <button onClick={this._handleSubmit.bind(this)}>submit</button>\r\n                        <button onClick={this._hanldeClear.bind(this)}>clear</button>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    _handleScoreChange() {\r\n        this._handleSubmit(null);\r\n    }\r\n\r\n    _hanldeClear(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        (document.getElementById(\"lhs\") as HTMLTextAreaElement).value = \"\";\r\n        (document.getElementById(\"rhs\") as HTMLTextAreaElement).value = \"\";\r\n\r\n        (document.getElementById(\"lhs\") as HTMLTextAreaElement).placeholder = \"\";\r\n        (document.getElementById(\"rhs\") as HTMLTextAreaElement).placeholder = \"\";\r\n\r\n        for (let i = 0; i < Input.scoreNumber; ++i)\r\n            (document.getElementById(\"score\" + i) as HTMLInputElement).value = Input.defaultScores[i].toString();\r\n\r\n        this.props.onSubmitHandler(\"\", \"\", Input.defaultScores);\r\n    }\r\n\r\n    _handleSubmit(event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null) {\r\n        // console.log(\"submit\");\r\n        let checkSequence = true;\r\n\r\n        let lhs = (document.getElementById(\"lhs\") as HTMLTextAreaElement).value.trim();\r\n        if (lhs === \"\") {\r\n            if (event) (document.getElementById(\"lhs\") as HTMLTextAreaElement).placeholder = \"cannot be blank\";\r\n            checkSequence = false;\r\n        }\r\n        let rhs = (document.getElementById(\"rhs\") as HTMLTextAreaElement).value.trim();\r\n        if (rhs === \"\") {\r\n            if (event) (document.getElementById(\"rhs\") as HTMLTextAreaElement).placeholder = \"cannot be blank\";\r\n            checkSequence = false;\r\n        }\r\n\r\n        let scores: number[] = [];\r\n        for (let i = 0; i < Input.scoreNumber; ++i) {\r\n            let input = (document.getElementById(\"score\" + i) as HTMLInputElement).value.trim();\r\n            let score = Number(input)\r\n            if (input === \"\" || isNaN(score)) {\r\n                scores.push(Input.defaultScores[i]);\r\n                (document.getElementById(\"score\" + i) as HTMLInputElement).value = Input.defaultScores[i].toString();\r\n            }\r\n            else {\r\n                scores.push(score);\r\n            }\r\n        }\r\n\r\n        if (checkSequence) this.props.onSubmitHandler(lhs, rhs, scores);\r\n    }\r\n\r\n    static defaultScores = [7, -3, -11, -2, -3];\r\n    static scoreNumber = 5;\r\n}\r\n\r\nexport default Input;\r\n\r\ninterface IInputProps {\r\n    onSubmitHandler: (lhs: string, rhs: string, scores: number[]) => void;\r\n}\r\n","import './NeedlemanWunsch.css';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass NeedlemanWunsch extends Component<INeedlemanWunschProps, INeedlemanWunschState> {\r\n\r\n    static x: number = 0;\r\n    static y: number = 1;\r\n    static z: number = 2;\r\n    static minusInfinity: number = Number.NEGATIVE_INFINITY;\r\n\r\n    // lhs: string;\r\n    // rhs: string;\r\n\r\n    // match    : number;\r\n    // mismatch : number;\r\n    // midopen  : number;\r\n    // extension: number;\r\n    // endopen  : number;\r\n\r\n    mtrx: Array<Array<Array<number>>>;\r\n    path: Array<Array<Array<number>>>;\r\n\r\n    lhsSpaces: Array<number>;\r\n    rhsSpaces: Array<number>;\r\n    lhsResult: string;\r\n    rhsResult: string;\r\n    pathRecord: Array<Array<number>>;\r\n\r\n    constructor(props: INeedlemanWunschProps) {\r\n        super(props);\r\n\r\n        // this.lhs = props.lhs;\r\n        // this.rhs = props.rhs;\r\n\r\n        // this.match     = props.match     ||  7 ;\r\n        // this.mismatch  = props.mismatch  || -3 ;\r\n        // this.midopen   = props.midopen   || -13;\r\n        // this.extension = props.extension || -2 ;\r\n        // this.endopen   = props.endopen   || -3 ;\r\n\r\n        this.state = {\r\n            lhs: props.lhs,\r\n            rhs: props.rhs,\r\n            match: props.scores[0],\r\n            mismatch: props.scores[1],\r\n            midopen: props.scores[2],\r\n            extension: props.scores[3],\r\n            endopen: props.scores[4]\r\n        }\r\n\r\n        this.mtrx = this._matrixesInit();\r\n        this.path = this._matrixesInit();\r\n        this._matrInit();\r\n        this._pathInit();\r\n\r\n        this.lhsSpaces = new Array<number>(this.state.lhs.length + 1);\r\n        this.rhsSpaces = new Array<number>(this.state.rhs.length + 1);\r\n        this.lhsResult = '';\r\n        this.rhsResult = '';\r\n        this.pathRecord = [];\r\n    }\r\n\r\n    _align(): void {\r\n        // console.log(\"lhs: \" + this.state.lhs);\r\n        // console.log(\"rhs: \" + this.state.rhs);\r\n        this._dp();\r\n        this._traceBack();\r\n        // console.log(this.pathRecord);\r\n        this.lhsResult = this._insertSpaces(this.props.lhs, this.lhsSpaces);\r\n        this.rhsResult = this._insertSpaces(this.props.rhs, this.rhsSpaces);\r\n        // console.log(\"lhs result: \" + this.lhsResult);\r\n        // console.log(\"rhs result: \" + this.rhsResult);\r\n    }\r\n\r\n    _matrInit(): void {\r\n        for (let i = 0; i <= this.state.lhs.length; ++i) {\r\n            this.mtrx[i][0][NeedlemanWunsch.x] = this.state.endopen + i * this.state.extension;\r\n            this.mtrx[i][0][NeedlemanWunsch.y] = this.mtrx[i][0][NeedlemanWunsch.z] = NeedlemanWunsch.minusInfinity;\r\n        }\r\n        for (let i = 0; i <= this.state.rhs.length; ++i) {\r\n            this.mtrx[0][i][NeedlemanWunsch.x] = this.mtrx[0][i][NeedlemanWunsch.z] = NeedlemanWunsch.minusInfinity;\r\n            this.mtrx[0][i][NeedlemanWunsch.y] = this.state.endopen + i * this.state.extension;\r\n        }\r\n        this.mtrx[0][0][NeedlemanWunsch.z] = 0;\r\n    }\r\n\r\n    _pathInit(): void {\r\n        for (let i = 1; i <= this.state.lhs.length; ++i) this.path[i][0][NeedlemanWunsch.x] = NeedlemanWunsch.x;\r\n        for (let i = 1; i <= this.state.rhs.length; ++i) this.path[0][i][NeedlemanWunsch.y] = NeedlemanWunsch.y;\r\n    }\r\n\r\n    _matrixesInit(): Array<Array<Array<number>>> {\r\n        let matrixes = Array<Array<Array<number>>>(this.state.lhs.length + 1);\r\n        for (let i = 0; i <= this.state.lhs.length; ++i) {\r\n            matrixes[i] = new Array<Array<number>>(this.state.rhs.length + 1);\r\n            for (let j = 0; j <= this.state.rhs.length; ++j) matrixes[i][j] = [0, 0, 0];\r\n        }\r\n        return matrixes;\r\n    }\r\n\r\n    _dp(): void {\r\n        this.mtrx = this._matrixesInit();\r\n        this.path = this._matrixesInit();\r\n        this._matrInit();\r\n        this._pathInit();\r\n        let indexOfMax: number;\r\n        let arr = [0, 0, 0];\r\n        for (let i = 1; i <= this.state.lhs.length; ++i) {\r\n            for (let j = 1; j <= this.state.rhs.length; ++j) {\r\n                const open: number = i === this.state.lhs.length || j === this.state.rhs.length ? this.state.endopen : this.state.midopen;\r\n\r\n                arr[NeedlemanWunsch.x] = this.mtrx[i - 1][j][NeedlemanWunsch.x];\r\n                arr[NeedlemanWunsch.y] = this.mtrx[i - 1][j][NeedlemanWunsch.y] + open;\r\n                arr[NeedlemanWunsch.z] = this.mtrx[i - 1][j][NeedlemanWunsch.z] + open;\r\n                indexOfMax = this._indexOfMax(arr);\r\n                this.mtrx[i][j][NeedlemanWunsch.x] = arr[indexOfMax] + this.state.extension;\r\n                this.path[i][j][NeedlemanWunsch.x] = indexOfMax;\r\n\r\n                arr[NeedlemanWunsch.x] = this.mtrx[i][j - 1][NeedlemanWunsch.x] + open;\r\n                arr[NeedlemanWunsch.y] = this.mtrx[i][j - 1][NeedlemanWunsch.y];\r\n                arr[NeedlemanWunsch.z] = this.mtrx[i][j - 1][NeedlemanWunsch.z] + open;\r\n                indexOfMax = this._indexOfMax(arr);\r\n                this.mtrx[i][j][NeedlemanWunsch.y] = arr[indexOfMax] + this.state.extension;\r\n                this.path[i][j][NeedlemanWunsch.y] = indexOfMax;\r\n\r\n                arr[NeedlemanWunsch.x] = this.mtrx[i - 1][j - 1][NeedlemanWunsch.x];\r\n                arr[NeedlemanWunsch.y] = this.mtrx[i - 1][j - 1][NeedlemanWunsch.y];\r\n                arr[NeedlemanWunsch.z] = this.mtrx[i - 1][j - 1][NeedlemanWunsch.z];\r\n                indexOfMax = this._indexOfMax(arr);\r\n                this.mtrx[i][j][NeedlemanWunsch.z] = arr[indexOfMax] + this._score(i - 1, j - 1);\r\n                this.path[i][j][NeedlemanWunsch.z] = indexOfMax;\r\n            }\r\n        }\r\n    }\r\n\r\n    _traceBack(): void {\r\n        this.lhsSpaces = new Array<number>(this.state.lhs.length + 1).fill(0);\r\n        this.rhsSpaces = new Array<number>(this.state.rhs.length + 1).fill(0);\r\n        this.pathRecord = [];\r\n        let lhsIndex = this.state.lhs.length;\r\n        let rhsIndex = this.state.rhs.length;\r\n        let arr = [this.mtrx[lhsIndex][rhsIndex][NeedlemanWunsch.x],\r\n        this.mtrx[lhsIndex][rhsIndex][NeedlemanWunsch.y],\r\n        this.mtrx[lhsIndex][rhsIndex][NeedlemanWunsch.z]];\r\n        let currPath = this._indexOfMax(arr);\r\n        this.pathRecord.push([lhsIndex, rhsIndex, currPath]);\r\n        while (lhsIndex > 0 || rhsIndex > 0) {\r\n            switch (currPath) {\r\n                case NeedlemanWunsch.x:\r\n                    currPath = this.path[lhsIndex--][rhsIndex][currPath];\r\n                    ++this.rhsSpaces[rhsIndex];\r\n                    break;\r\n                case NeedlemanWunsch.y:\r\n                    currPath = this.path[lhsIndex][rhsIndex--][currPath];\r\n                    ++this.lhsSpaces[lhsIndex];\r\n                    break;\r\n                case NeedlemanWunsch.z:\r\n                    currPath = this.path[lhsIndex--][rhsIndex--][currPath];\r\n                    break;\r\n            }\r\n            this.pathRecord.push([lhsIndex, rhsIndex, currPath]);\r\n        }\r\n    }\r\n\r\n    _score(lhs: number, rhs: number): number {\r\n        let lhsChar = this.state.lhs.charAt(lhs);\r\n        let rhsChar = this.state.rhs.charAt(rhs);\r\n        // if (lhsChar === \"n\" || rhsChar === \"n\") return 0; // TODO\r\n        return lhsChar === rhsChar ? this.state.match : this.state.mismatch;\r\n    }\r\n\r\n    _indexOfMax(arr: number[]): number {\r\n        let indexOfMax = 0;\r\n        for (let i = 1; i < arr.length; ++i) if (arr[indexOfMax] < arr[i]) indexOfMax = i;\r\n        return indexOfMax;\r\n    }\r\n\r\n    _insertSpaces(src: string, spaces: number[]): string {\r\n        let result = \"\";\r\n        for (let i = 0; i < src.length; ++i) {\r\n            for (let j = 0; j < spaces[i]; ++j) result += '-';\r\n            result += src[i];\r\n        }\r\n        for (let j = 0; j < spaces[src.length]; ++j) result += '-';\r\n        return result;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props: INeedlemanWunschProps, state: INeedlemanWunschState) {\r\n        return {\r\n            lhs: props.lhs,\r\n            rhs: props.rhs,\r\n            match: props.scores[0],\r\n            mismatch: props.scores[1],\r\n            midopen: props.scores[2],\r\n            extension: props.scores[3],\r\n            endopen: props.scores[4]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this._align();\r\n\r\n        const resultHTML = () => {\r\n            if (this.state.lhs !== \"\")\r\n                return (\r\n                    <div id=\"result\">\r\n                        <code>{this.lhsResult}</code>\r\n                        <br></br>\r\n                        <code>{this.rhsResult}</code>\r\n                    </div>\r\n                );\r\n            else\r\n                return (<></>);\r\n        }\r\n\r\n        const matrixFirstRow = () => {\r\n            let result = [<td></td>, <td></td>];\r\n            for (let i = 0; i < this.state.rhs.length; ++i) {\r\n                result.push(\r\n                    <td className=\"tableHead\" id={\"c\" + (i + 1)}>{this.state.rhs[i]}</td>\r\n                )\r\n            }\r\n            return result;\r\n        }\r\n\r\n        const matrixHTML = () => {\r\n            if (this.state.lhs !== \"\") {\r\n                let pathRecordIndex = this.pathRecord.length - 1;\r\n                const determine = (i: number, j: number, k: number) => {\r\n                    // console.log(pathRecordIndex);\r\n                    let result = i === this.pathRecord[pathRecordIndex][0] && \r\n                                 j === this.pathRecord[pathRecordIndex][1] &&\r\n                                 k === this.pathRecord[pathRecordIndex][2];\r\n                    if (result && pathRecordIndex > 0) --pathRecordIndex;\r\n                    return result;\r\n                }\r\n\r\n                return (\r\n                    <section id=\"matrix\">\r\n                        <table><tbody>\r\n                            <tr>{matrixFirstRow()}</tr>\r\n                            {this.mtrx.map(((raw, i) => (\r\n                                <tr>\r\n                                    <td className=\"tableHead\" id={\"r\" + i}>{i === 0 ? \"\" : this.state.lhs[i - 1]}</td>\r\n                                    {raw.map((elem, j) => (\r\n                                        <td\r\n                                            id={\"r\" + i + \"c\" + j}\r\n                                            onMouseEnter={this._handleMatrixElementMouseEnter.bind(this, i, j)}\r\n                                            onMouseLeave={this._handleMatrixElementMouseLeave.bind(this, i, j)}\r\n                                        >{elem.map((field, k) => (\r\n                                            <p\r\n                                                className={determine(i, j, k) ? \"path\" : \"\"}\r\n                                                id={\"r\" + i + \"c\" + j + \"p\" + k}\r\n                                                onMouseEnter={this._handleInnerMatrixElementMouseEnter.bind(this, i, j, k)}\r\n                                                onMouseLeave={this._handleInnerMatrixElementMouseLeave.bind(this, i, j, k)}\r\n                                            >{field === Number.NEGATIVE_INFINITY ? \"-∞\" : field}</p>\r\n                                        ))}\r\n                                        </td>\r\n                                    ))}\r\n                                </tr>\r\n                            )))}\r\n                        </tbody></table>\r\n                    </section>\r\n                );\r\n            } else {\r\n                return (<></>);\r\n            }\r\n        }\r\n\r\n        const tip = () => {\r\n            return (\r\n                <div id=\"tip\" className=\"tip-none\">\r\n                    <p>this is a tip</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {resultHTML()}\r\n                {matrixHTML()}\r\n                {tip()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     this._showPath();\r\n    // }\r\n\r\n    // _showPath() {\r\n    //     for (let i = 0; i < this.pathRecord.length; ++i) {\r\n    //         document.getElementById(\"r\" + this.pathRecord[i][0] + \"c\" + this.pathRecord[i][1] + \"p\" + this.pathRecord[i][2])?.setAttribute(\"class\", \"path\");\r\n    //     }\r\n    // }\r\n\r\n    _handleMatrixElementMouseEnter(i: number, j: number): void {\r\n        // console.log(i + \" \" + j);\r\n        if (i > 0) this._setHighlighted(this._getRowHeadElementById(i));\r\n        if (j > 0) this._setHighlighted(this._getColumnHeadElementById(j));\r\n    }\r\n\r\n    _handleMatrixElementMouseLeave(i: number, j: number): void {\r\n        // console.log(i + \" \" + j);\r\n        if (i > 0) this._unsetHighlighted(this._getRowHeadElementById(i))\r\n        if (j > 0) this._unsetHighlighted(this._getColumnHeadElementById(j));\r\n    }\r\n\r\n    _handleInnerMatrixElementMouseEnter(i: number, j: number, k: number, event: React.MouseEvent<HTMLTableDataCellElement, MouseEvent>): void {\r\n        // console.log(i + \" \" + j + \" \" + k);\r\n\r\n        const setTip = (tipContent: string) : void => {\r\n            let tip = document.getElementById(\"tip\") as HTMLDivElement;\r\n            (tip.firstChild as HTMLParagraphElement).innerHTML = tipContent;\r\n            tip.className = event.clientX > document.body.clientWidth / 2 ? \"tip-left\" : \"tip-right\";\r\n        }\r\n\r\n        if (i > 0 && j > 0) {\r\n            this._setHighlighted(this._getInnerMatrixOrigin(i, j, k));\r\n            setTip(this._getMatchInfo(i, j, k));\r\n        }\r\n\r\n        if (i === 0 && j > 0 && k === 1) {\r\n            this._setHighlighted(this._getInnerMatrixElementById(i, j - 1, k));\r\n            setTip(\"extension \" + this.state.extension);\r\n        }\r\n\r\n        if (i > 0 && j === 0 && k === 0) {\r\n            this._setHighlighted(this._getInnerMatrixElementById(i - 1, j, k));\r\n            setTip(\"extension \" + this.state.extension);\r\n        }\r\n\r\n        if (i === 0 && j === 0)\r\n        {\r\n            if (k === 1) setTip(\"endopen \" + this.state.endopen);\r\n            if (k === 2) setTip(\"beginning \" + 0);\r\n        }\r\n    }\r\n\r\n    _getMatchInfo(i: number, j: number, k: number): string {\r\n        if (k === NeedlemanWunsch.z)\r\n            return this.state.lhs.charAt(i - 1) === this.state.rhs.charAt(j - 1) ? \"match \" + this.state.match : \"mismatch \" + this.state.mismatch;\r\n\r\n        return k === this.path[i][j][k] ? \"extension \" + this.state.extension : \r\n                i === this.state.lhs.length || j === this.state.rhs.length ? \"endopen \" + (this.state.endopen + this.state.extension) :\r\n                        \"opengap \" + (this.state.midopen + this.state.extension);\r\n    }\r\n    \r\n    _handleInnerMatrixElementMouseLeave(i: number, j: number, k: number): void {\r\n        // console.log(i + \" \" + j + \" \" + k);\r\n        if (i > 0 && j > 0) this._unsetHighlighted(this._getInnerMatrixOrigin(i, j, k));\r\n        if (i === 0 && j > 0 && k === 1) this._unsetHighlighted(this._getInnerMatrixElementById(i, j - 1, k));\r\n        if (i > 0 && j === 0 && k === 0) this._unsetHighlighted(this._getInnerMatrixElementById(i - 1, j, k));\r\n        (document.getElementById(\"tip\") as HTMLDivElement).className = \"tip-none\";\r\n    }\r\n\r\n    _setHighlighted(element: HTMLElement): void {\r\n        element.classList.add(\"highlighted\");\r\n    }\r\n\r\n    _unsetHighlighted(element: HTMLElement): void {\r\n        element.classList.remove(\"highlighted\");\r\n    }\r\n\r\n    _getInnerMatrixOrigin(i: number, j: number, k: number): HTMLElement {\r\n        switch (k) {\r\n            case NeedlemanWunsch.x:\r\n                return this._getInnerMatrixElementById(i - 1, j, this.path[i][j][k]);\r\n            case NeedlemanWunsch.y:\r\n                return this._getInnerMatrixElementById(i, j - 1, this.path[i][j][k]);\r\n            default:\r\n                return this._getInnerMatrixElementById(i - 1, j - 1, this.path[i][j][k]);\r\n        }\r\n    }\r\n\r\n    _getInnerMatrixElementById(i: number, j: number, k: number): HTMLElement {\r\n        return document.getElementById(\"r\" + i + \"c\" + j + \"p\" + k) as HTMLElement;\r\n    }\r\n\r\n    _getMatrixElementById(i: number, j: number): HTMLElement {\r\n        return document.getElementById(\"r\" + i + \"c\" + j) as HTMLElement;\r\n    }\r\n\r\n    _getRowHeadElementById(i: number): HTMLElement {\r\n        return document.getElementById(\"r\" + i) as HTMLElement;\r\n    }\r\n\r\n    _getColumnHeadElementById(j: number): HTMLElement {\r\n        return document.getElementById(\"c\" + j) as HTMLElement;\r\n    }\r\n\r\n    // _handleMouseOver(/*event: React.MouseEvent*/) {\r\n    //     // let tableHeads = document.getElementsByClassName(\"tableHead\");\r\n    //     // for (let i = 0; i < tableHeads.length; ++i)\r\n    //     //     tableHeads[i].setAttribute(\"class\", \"highlighted\");\r\n    //     // console.log(document.getElementsByClassName(\"tableHead\"));\r\n    // }\r\n\r\n}\r\n\r\nexport default NeedlemanWunsch;\r\n\r\ninterface INeedlemanWunschProps {\r\n    lhs: string;\r\n    rhs: string;\r\n    scores: number[];\r\n}\r\n\r\ninterface INeedlemanWunschState {\r\n    lhs: string;\r\n    rhs: string;\r\n    match: number;\r\n    mismatch: number;\r\n    midopen: number;\r\n    extension: number;\r\n    endopen: number;\r\n}\r\n","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport Input from './Input';\r\nimport NeedlemanWunsch from './NeedlemanWunsch';\r\n\r\nclass App extends Component<any, IAppState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      lhs: \"\",\r\n      rhs: \"\",\r\n      scores: []\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            Edit <code>src/App.tsx</code> and save to reload.<br></br>\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header> */}\r\n        <Input onSubmitHandler={ this._submit.bind(this) } />\r\n        <NeedlemanWunsch lhs={ this.state.lhs } rhs={ this.state.rhs } scores={ this.state.scores } />\r\n      </div>\r\n    );\r\n  }\r\n    \r\n  _submit(lhs: string, rhs: string, scores: number[]) {\r\n    this.setState({\r\n      lhs: lhs,\r\n      rhs: rhs,\r\n      scores: scores\r\n    })\r\n  }\r\n\r\n}\r\n\r\ninterface IAppState {\r\n  lhs: string;\r\n  rhs: string;\r\n  scores: number[];\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\n\r\nimport './Footer.css';\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <p>author: <a href=\"http://lab.malab.cn/~cjn/\">Chao Jiannan</a></p>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Footer from './Footer';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('content')\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Footer />\r\n  </React.StrictMode>,\r\n  document.getElementById('footer')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}